'fileTypes': [
  's'
  'S'
  'asm'
]
'name': 'Assembly (80960/i960)'
'patterns': [
  {
    'match': '(?i)(?x)(\\s*)%?\\b(?:[rg](?:[0-9]|1[0-9])|fp(?:[0-3])|sfr(?:[0-9]|[1-3][0-9]))\\b'
    'name': 'variable.registers.80960.assembly'
  }
  {
    'match': '(?i)(?x)(\\s*)\\b(?:ld(ob|os|ib|is|l|t|q)?|st(ob|os|ib|is|l|t|q)?|mov(l|t|q)?|lda|add(i|o|c)|sub(i|o|c)|mul(i|o)|div(i|o)|e(mul|div)|rem(i|o)|modi|sh(lo|ro|li|ri|rdi)|rotate|eshro|and|notand|andnot|xor|or|nor|xnor|not|notor|ornot|nand|(set|clr|not|alter|scan|span)bit|extract|modify|scanbyte|cmp(i|o)|concmp(i|o)|chkbit|cmpinc(i|o)|cmpdec(i|o)|test(e|ne|l|le|g|ge|o|no)|b(x|al|alx)?|b(e|ne|l|le|g|ge|o|no|bs|bc)?(\\.[tf])?|cmpib(e|ne|l|le|g|ge|o|no)(\\.[tf])?|cmpob(e|ne|l|le|g|ge)(\\.[tf])?|call(x|s)?|ret|fault(e|ne|l|le|g|ge|o|no)(\\.[tf])?|mod(pc|tc|ac)|mark|fmark|flushreg|sysctl|sdma|udma)\\b'
    'name': 'keyword.mnemonic.80960.assembly'
  }
  {
    'match': '^[_a-zA-Z][a-zA-Z0-9-_.]*(?=:)'
    'name': 'entity.name.function.80960.assembly'
  }
  {
    'match': '(?<=[<]).+(?=[+>])'
    'name': 'entity.name.function.80960.assembly'
  }
  {
    'match': '(\\/\\/).*$'
    'name': 'comment.80960.assembly'
  }
  {
	# Preprocessor directives
    'match': '^\\s*(?:\\.abort|\\.align|\\.ascii|\\.asciz|\\.balign[wl]?|\\.byte|\\.comm|\\.data|\\.def|\\.dim|\\.double|\\.eject|\\.else|\\.end|\\.elseif|\\.endef|\\.endfunc|\\.endif|\\.endm|\\.endr|\\.equ|\\.equiv|\\.err|\\.even|\\.exitm|\\.extern|\\.fail|\\.file|\\.fill|\\.float|\\.func|\.global|\\.hword|\\.ident|\\.if|\\.include|\\.incbin|\\.int|\\.irp|\\.irpc|\\.lcomm|\\.lflags|\\.line|\\.ln|\\.list|\\.long|\\.macro|\\.mri|\\.nolist|\\.octa|\\.org|\\.p2align[wl]?|\\.print|\\.psize|\\.purgem|\\.quad|\\.rept|\\.sbttl|\\.scl|\\.section|\\.set|\\.short|\\.single|\\.size|\\.sleb128|\\.skip|\\.space|\\.stabd|\\.stabn|\\.stabs|\\.string|\\.struct|\\.tag|\\.text|\\.title|\\.type|\\.uleb128|\\.val|\\.vtable_entry|\\.word|\\.tc)\\b'
    'name': 'support.class.80960.assembly'
  }
  {
	# These are for capturing strings
    'begin': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.ppc.assembly'
    'end': '"'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.ppc.assembly'
    'name': 'string.quoted.double.include.ppc.assembly'
  }
  {
    'match': '[*$](?=0x)'
    'name': 'storage.type.method.80960.assembly'
  }
  {
    'match': '-?\\b[0-9]+\\b'
    'name': 'constant.numeric.dec.80960.assembly'
  }
  {
    'match': '-?\\b0(x|X)[0-9a-fA-F]*\\b'
    'name': 'constant.numeric.hex.80960.assembly'
  }
]
'scopeName': 'source.80960asm'
